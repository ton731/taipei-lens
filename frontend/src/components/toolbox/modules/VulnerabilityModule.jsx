import React, { useState } from 'react';
import AccordionItem from '../../ui/AccordionItem';
import WeightSlider from '../../ui/WeightSlider';

const VulnerabilityModule = ({ isOpen, onToggleOpen }) => {
  const [isEnabled, setIsEnabled] = useState(false);
  const [factorWeights, setFactorWeights] = useState({
    elderly: 0,
    low_income: 0,
    living_alone: 0
  });

  const factors = [
    {
      value: 'elderly',
      label: '高齡人口 (65歲以上)',
      icon: (
        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" style={{ color: '#666' }}>
          <circle cx="12" cy="8" r="5" stroke="currentColor" strokeWidth="2" fill="none"/>
          <path d="M20 21a8 8 0 0 0-16 0" stroke="currentColor" strokeWidth="2" fill="none"/>
        </svg>
      )
    },
    {
      value: 'low_income',
      label: '低收入戶',
      icon: (
        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" style={{ color: '#666' }}>
          <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2" fill="none"/>
          <line x1="12" y1="6" x2="12" y2="10" stroke="currentColor" strokeWidth="2"/>
          <line x1="12" y1="16" x2="12.01" y2="16" stroke="currentColor" strokeWidth="2"/>
        </svg>
      )
    },
    {
      value: 'living_alone',
      label: '獨居長者',
      icon: (
        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" style={{ color: '#666' }}>
          <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" stroke="currentColor" strokeWidth="2" fill="none"/>
          <polyline points="9,22 9,12 15,12 15,22" stroke="currentColor" strokeWidth="2" fill="none"/>
        </svg>
      )
    }
  ];

  const handleToggleEnabled = (e) => {
    const enabled = e.target.checked;
    setIsEnabled(enabled);   
  };

  const handleWeightChange = (factorValue, newWeight) => {
    const weight = parseFloat(newWeight);
    setFactorWeights(prev => ({
      ...prev,
      [factorValue]: weight
    }));
  };

  return (
    <AccordionItem
      icon={
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#333' }}>
          <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2" stroke="currentColor" strokeWidth="2" fill="none"/>
          <circle cx="9" cy="7" r="4" stroke="currentColor" strokeWidth="2" fill="none"/>
          <path d="M23 21v-2a4 4 0 0 0-3-3.87" stroke="currentColor" strokeWidth="2" fill="none"/>
          <path d="M16 3.13a4 4 0 0 1 0 7.75" stroke="currentColor" strokeWidth="2" fill="none"/>
        </svg>
      }
      title="社會脆弱性分析"
      isOpen={isOpen}
      onToggleOpen={onToggleOpen}
      onToggleEnabled={handleToggleEnabled}
      isEnabled={isEnabled}
    >
      <div style={{
        display: 'flex',
        flexDirection: 'column',
        gap: '8px' // 從12px減少到8px
      }}>
        <div style={{
          fontSize: '11px',
          color: '#666',
          lineHeight: '1.3',
          marginBottom: '8px'
        }}>
          調整權重配置以分析綜合脆弱性
        </div>

        {/* 三個權重滑桿區域 - 直接顯示，不包框架 */}
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          gap: '4px' // 減少滑桿間距
        }}>
          {factors.map(factor => (
            <WeightSlider
              key={factor.value}
              id={`weight-${factor.value}`}
              factorName={factor.label}
              icon={factor.icon}
              value={factorWeights[factor.value]}
              onChange={(e) => handleWeightChange(factor.value, e.target.value)}
              disabled={false}
            />
          ))}
        </div>


      </div>
    </AccordionItem>
  );
};

export default VulnerabilityModule;