import React from 'react';

/**
 * 結構脆弱度圖層控制組件
 * 提供離散地震強度滑桿，讓使用者選擇要查看的地震強度
 */
const StructuralVulnerabilityControl = ({ 
  earthquakeIntensity, 
  onIntensityChange,
  disabled = false 
}) => {
  // 定義離散的地震強度選項
  const intensityOptions = [
    { value: '3', label: '3級' },
    { value: '5弱', label: '5弱' },
    { value: '5強', label: '5強' },
    { value: '6弱', label: '6弱' },
    { value: '6強', label: '6強' },
    { value: '7', label: '7級' }
  ];

  // 找到當前選擇的選項索引
  const currentIndex = intensityOptions.findIndex(opt => opt.value === earthquakeIntensity);
  const validIndex = currentIndex >= 0 ? currentIndex : 0;

  const handleSliderChange = (e) => {
    const index = parseInt(e.target.value);
    onIntensityChange(intensityOptions[index].value);
  };

  return (
    <div style={{
      padding: '12px 16px',
      backgroundColor: '#f8f9fa',
      borderRadius: '6px',
      border: '1px solid #e0e0e0'
    }}>
      <div style={{
        fontSize: '13px',
        color: '#666',
        lineHeight: '1.4',
        marginBottom: '12px'
      }}>
        選擇地震強度以查看建築物在該強度下的結構倒塌機率
      </div>

      {/* 離散地震強度滑桿 */}
      <div style={{ width: '100%' }}>
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: '8px'
        }}>
          <label style={{
            fontSize: '14px',
            fontWeight: '500',
            color: '#333'
          }}>
            地震強度
          </label>
          <span style={{
            fontSize: '13px',
            color: '#d97706',
            backgroundColor: '#fef3e7',
            padding: '2px 8px',
            borderRadius: '4px',
            border: '1px solid #fdae6b',
            fontWeight: '600'
          }}>
            {intensityOptions[validIndex].label}
          </span>
        </div>

        <div style={{ position: 'relative', width: '100%' }}>
          <input
            type="range"
            min={0}
            max={intensityOptions.length - 1}
            step={1}
            value={validIndex}
            onChange={handleSliderChange}
            disabled={disabled}
            style={{
              width: '100%',
              height: '6px',
              borderRadius: '3px',
              background: `linear-gradient(to right, #d97706 0%, #d97706 ${(validIndex / (intensityOptions.length - 1)) * 100}%, #e0e0e0 ${(validIndex / (intensityOptions.length - 1)) * 100}%, #e0e0e0 100%)`,
              outline: 'none',
              appearance: 'none',
              cursor: disabled ? 'not-allowed' : 'pointer',
              opacity: disabled ? 0.5 : 1,
              WebkitAppearance: 'none'
            }}
          />

          <style jsx>{`
            input[type="range"]::-webkit-slider-thumb {
              appearance: none;
              -webkit-appearance: none;
              width: 18px;
              height: 18px;
              border-radius: 50%;
              background: #d97706;
              border: 2px solid white;
              box-shadow: 0 2px 6px rgba(0,0,0,0.2);
              cursor: ${disabled ? 'not-allowed' : 'pointer'};
              transition: transform 0.2s ease;
            }

            input[type="range"]::-webkit-slider-thumb:hover {
              transform: ${disabled ? 'none' : 'scale(1.1)'};
            }

            input[type="range"]::-moz-range-thumb {
              width: 18px;
              height: 18px;
              border-radius: 50%;
              background: #d97706;
              border: 2px solid white;
              box-shadow: 0 2px 6px rgba(0,0,0,0.2);
              cursor: ${disabled ? 'not-allowed' : 'pointer'};
              border: none;
            }
          `}</style>
        </div>

        {/* 刻度標籤 */}
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          marginTop: '8px',
          fontSize: '10px',
          color: '#888'
        }}>
          {intensityOptions.map((option, index) => (
            <span 
              key={option.value}
              style={{
                color: index === validIndex ? '#d97706' : '#888',
                fontWeight: index === validIndex ? '600' : '400'
              }}
            >
              {option.label}
            </span>
          ))}
        </div>
      </div>
    </div>
  );
};

export default StructuralVulnerabilityControl;